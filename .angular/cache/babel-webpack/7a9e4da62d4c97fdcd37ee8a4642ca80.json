{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\n\nfunction DynamicFormItemComponent_input_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"input\", 5);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formControlName\", ctx_r0.formItem.key)(\"id\", ctx_r0.formItem.key)(\"type\", ctx_r0.formItem.type);\n  }\n}\n\nfunction DynamicFormItemComponent_select_5_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r4.key);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(option_r4.value);\n  }\n}\n\nfunction DynamicFormItemComponent_select_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"select\", 6);\n    i0.ɵɵtemplate(1, DynamicFormItemComponent_select_5_option_1_Template, 2, 2, \"option\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formControlName\", ctx_r1.formItem.key)(\"id\", ctx_r1.formItem.key);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.formItem.options);\n  }\n}\n\nfunction DynamicFormItemComponent_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r2.formItem.label, \" is required\");\n  }\n}\n\nfunction DynamicFormComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"dynamic-form-item\", 4);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const formItem_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formItem\", formItem_r2)(\"form\", ctx_r0.form);\n  }\n}\n\nfunction DynamicFormComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Saved the following values: \", ctx_r1.payLoad, \" \");\n  }\n} // Superclass for all kinds of form items.\n\n\nclass FormItemBase {\n  constructor(options = {}) {\n    this.value = options.value;\n    this.key = options.key || '';\n    this.label = options.label || '';\n    this.required = !!options.required;\n    this.order = options.order === undefined ? 1 : options.order;\n    this.controlType = options.controlType || '';\n  }\n\n} // Textbox form items.\n\n\nclass TextboxFormItem extends FormItemBase {\n  constructor(options = {}) {\n    super(options);\n    this.controlType = 'textbox';\n    this.type = options['type'] || '';\n  }\n\n} // Dropdown form items.\n\n\nclass DropdownFormItem extends FormItemBase {\n  constructor(options = {}) {\n    super(options);\n    this.controlType = 'dropdown';\n    this.options = [];\n    this.options = options['options'] || [];\n  }\n\n} // Encapsulate form items in a FormGroup of FormControl objects.\n\n\nlet FormItemsService = /*#__PURE__*/(() => {\n  class FormItemsService {\n    toFormGroup(formItems) {\n      let group = {};\n\n      for (let formItem of formItems) {\n        group[formItem.key] = formItem.required ? new FormControl(formItem.value || '', Validators.required) : new FormControl(formItem.value || '');\n      }\n\n      return new FormGroup(group);\n    }\n\n  }\n\n  FormItemsService.ɵfac = function FormItemsService_Factory(t) {\n    return new (t || FormItemsService)();\n  };\n\n  FormItemsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: FormItemsService,\n    factory: FormItemsService.ɵfac,\n    providedIn: 'root'\n  }); // Component to represent one item in a dynamic form.\n\n  return FormItemsService;\n})();\nexport let DynamicFormItemComponent = /*#__PURE__*/(() => {\n  class DynamicFormItemComponent {\n    get isValid() {\n      return this.form.controls[this.formItem.key].valid;\n    }\n\n  }\n\n  DynamicFormItemComponent.ɵfac = function DynamicFormItemComponent_Factory(t) {\n    return new (t || DynamicFormItemComponent)();\n  };\n\n  DynamicFormItemComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DynamicFormItemComponent,\n    selectors: [[\"dynamic-form-item\"]],\n    inputs: {\n      formItem: \"formItem\",\n      form: \"form\"\n    },\n    decls: 7,\n    vars: 7,\n    consts: [[1, \"form-row\", 3, \"formGroup\"], [3, \"ngSwitch\"], [3, \"formControlName\", \"id\", \"type\", 4, \"ngSwitchCase\"], [3, \"formControlName\", \"id\", 4, \"ngSwitchCase\"], [\"class\", \"errorMessage\", 4, \"ngIf\"], [3, \"formControlName\", \"id\", \"type\"], [3, \"formControlName\", \"id\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [1, \"errorMessage\"]],\n    template: function DynamicFormItemComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"label\");\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"span\", 1);\n        i0.ɵɵtemplate(4, DynamicFormItemComponent_input_4_Template, 1, 3, \"input\", 2);\n        i0.ɵɵtemplate(5, DynamicFormItemComponent_select_5_Template, 2, 3, \"select\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(6, DynamicFormItemComponent_span_6_Template, 2, 1, \"span\", 4);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(1);\n        i0.ɵɵattribute(\"for\", ctx.formItem.key);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.formItem.label);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitch\", ctx.formItem.controlType);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"textbox\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"dropdown\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isValid);\n      }\n    },\n    directives: [i1.NgControlStatusGroup, i1.FormGroupDirective, i2.NgSwitch, i2.NgSwitchCase, i2.NgIf, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i1.SelectControlValueAccessor, i2.NgForOf, i1.NgSelectOption, i1.ɵNgSelectMultipleOption],\n    styles: [\".form-row[_ngcontent-%COMP%]{margin-bottom:10px}label[_ngcontent-%COMP%]{float:left;width:150px}input[_ngcontent-%COMP%], select[_ngcontent-%COMP%]{width:200px;box-sizing:border-box}\"]\n  }); // Component to represent an entire dynamic form.\n\n  return DynamicFormItemComponent;\n})();\nexport let DynamicFormComponent = /*#__PURE__*/(() => {\n  class DynamicFormComponent {\n    constructor(service) {\n      this.service = service;\n      this.formItems = [];\n      this.payLoad = '';\n    }\n\n    ngOnInit() {\n      this.form = this.service.toFormGroup(this.formItems);\n    }\n\n    onSubmit() {\n      this.payLoad = JSON.stringify(this.form.value);\n    }\n\n  }\n\n  DynamicFormComponent.ɵfac = function DynamicFormComponent_Factory(t) {\n    return new (t || DynamicFormComponent)(i0.ɵɵdirectiveInject(FormItemsService));\n  };\n\n  DynamicFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DynamicFormComponent,\n    selectors: [[\"dynamic-form\"]],\n    inputs: {\n      formItems: \"formItems\"\n    },\n    decls: 7,\n    vars: 4,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 3, \"disabled\"], [\"class\", \"form-summary\", 4, \"ngIf\"], [3, \"formItem\", \"form\"], [1, \"form-summary\"]],\n    template: function DynamicFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵelementStart(1, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function DynamicFormComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵtemplate(2, DynamicFormComponent_div_2_Template, 2, 2, \"div\", 1);\n        i0.ɵɵelementStart(3, \"div\");\n        i0.ɵɵelementStart(4, \"button\", 2);\n        i0.ɵɵtext(5, \"Save\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(6, DynamicFormComponent_div_6_Template, 2, 1, \"div\", 3);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.formItems);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", !ctx.form.valid);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.payLoad);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i2.NgForOf, i2.NgIf, DynamicFormItemComponent],\n    styles: [\".form-summary[_ngcontent-%COMP%]{color:#fff}.form-summary[_ngcontent-%COMP%]{margin-top:10px;padding:5px 2px;width:90%;background-color:#00b0ff;color:#fff}\"]\n  }); // Top-level component, which drives the whole thing.\n\n  return DynamicFormComponent;\n})();\nexport let DynamicFormsComponent = /*#__PURE__*/(() => {\n  class DynamicFormsComponent {\n    constructor() {\n      let items = [// new DropdownFormItem({\n      //     key: 'nationality',\n      //     label: 'Nationality',\n      //     options: [\n      //         {key: 'NO', value: 'Norway'},\n      //         {key: 'SE', value: 'Sweden'},\n      //         {key: 'DK', value: 'Denmark'},\n      //         {key: 'FI', value: 'Finland'},\n      //         {key: 'XX', value: 'Other'}\n      //     ],\n      //     order: 5\n      // }),\n      new TextboxFormItem({\n        key: 'firstName',\n        label: 'Customer number',\n        value: 'Ola',\n        required: true,\n        order: 1\n      }) // new TextboxFormItem({\n      //     key: 'lastName',\n      //     label: 'Last name',\n      //     value: 'Nordmann',\n      //     required: true,\n      //     order: 2\n      // }),\n      // new TextboxFormItem({\n      //     key: 'salary',\n      //     label: 'Salary',\n      //     type: 'number',\n      //     value: '25000',\n      //     required: true,\n      //     order: 3\n      // }),\n      // new TextboxFormItem({\n      //     key: 'emailAddress',\n      //     label: 'Email',\n      //     type: 'email',\n      //     order: 4\n      // })\n      ];\n      this.formItems = items.sort((a, b) => a.order - b.order);\n    }\n\n  }\n\n  DynamicFormsComponent.ɵfac = function DynamicFormsComponent_Factory(t) {\n    return new (t || DynamicFormsComponent)();\n  };\n\n  DynamicFormsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DynamicFormsComponent,\n    selectors: [[\"app-dynamic-forms\"]],\n    decls: 3,\n    vars: 1,\n    consts: [[3, \"formItems\"]],\n    template: function DynamicFormsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"Digital Banking Services\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(2, \"dynamic-form\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formItems\", ctx.formItems);\n      }\n    },\n    directives: [DynamicFormComponent],\n    encapsulation: 2\n  });\n  return DynamicFormsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}